name: Windows RDP via ZeroTier

on:
  workflow_dispatch:
    inputs:
      zt_network_id:
        description: "ZeroTier Network ID"
        required: true
      rdp_user:
        description: "RDP Username"
        required: false
        default: "runneradmin"
      rdp_pass:
        description: "RDP Password"
        required: false
        default: "MyPassword!123"

jobs:
  rdp:
    runs-on: windows-2022
    timeout-minutes: 60

    steps:
      - name: Install ZeroTier (if missing)
        shell: pwsh
        run: |
          $exe = "C:\Program Files\ZeroTier\One\zerotier-one_x64.exe"
          if (-not (Test-Path $exe)) {
            $url = "https://download.zerotier.com/RELEASES/1.14.0/dist/ZeroTier%20One.msi"
            $msi = "$env:TEMP\zerotier-one.msi"
            Invoke-WebRequest -Uri $url -OutFile $msi -UseBasicParsing
            Start-Process msiexec.exe -ArgumentList "/i `"$msi`" /quiet /norestart" -Wait
          }

      - name: Find ZeroTier CLI Path
        id: ztcli
        shell: pwsh
        run: |
          $paths = @(
            "C:\Program Files\ZeroTier\One\zerotier-cli.bat",
            "C:\Program Files (x86)\ZeroTier\One\zerotier-cli.bat"
          )
          foreach ($p in $paths) {
            if (Test-Path $p) {
              echo "cli=$p" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
              break
            }
          }

      - name: Join ZeroTier Network
        shell: pwsh
        run: |
          $cli = "${{ steps.ztcli.outputs.cli }}"
          & $cli join ${{ github.event.inputs.zt_network_id }}
          Start-Sleep -Seconds 6
          & $cli listnetworks

      - name: Enable RDP User & Set Password
        shell: pwsh
        run: |
          $u = "${{ github.event.inputs.rdp_user }}"
          $p = "${{ github.event.inputs.rdp_pass }}"
          $sec = ConvertTo-SecureString $p -AsPlainText -Force
          if (-not (Get-LocalUser -Name $u -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $u -Password $sec -AccountNeverExpires
            Add-LocalGroupMember -Group Administrators -Member $u
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $u
          } else {
            Set-LocalUser -Name $u -Password $sec -AccountNeverExpires
            Enable-LocalUser -Name $u
          }
          Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name fDenyTSConnections -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop" | Out-Null

      - name: Show ZeroTier IP
        shell: pwsh
        run: |
          ipconfig
          
